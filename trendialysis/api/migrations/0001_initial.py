# Generated by Django 4.0.4 on 2022-04-25 03:54

import address.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0004_alter_address_id_alter_country_id_alter_locality_id_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=30)),
                ('country', models.CharField(default='United States', max_length=13)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('patient_id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('age', models.PositiveSmallIntegerField()),
                ('gender', models.CharField(choices=[('M', 'male'), ('F', 'female')], max_length=1)),
                ('phone', models.CharField(default='(XXX)-XXX-XXXX', max_length=13, unique=True)),
                ('nearest_city', models.PositiveSmallIntegerField()),
                ('city_distance', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QualityOfLife',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality_of_life', models.FloatField()),
                ('purchase_power', models.FloatField()),
                ('healthcare', models.FloatField()),
                ('pollution', models.FloatField()),
                ('crime', models.FloatField()),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.cities')),
            ],
        ),
        migrations.CreateModel(
            name='HealthMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Dias_blood_pressure', models.FloatField(null=True)),
                ('ur_specific_gravity', models.FloatField(null=True)),
                ('ur_albumin', models.FloatField(null=True)),
                ('ur_sugar', models.FloatField(null=True)),
                ('red_blood_cells', models.CharField(choices=[('N', 'normal'), ('A', 'abnormal')], max_length=1, null=True)),
                ('ur_pus_cell', models.CharField(choices=[('N', 'normal'), ('A', 'abnormal')], max_length=1, null=True)),
                ('ur_pus_cell_Clumps', models.CharField(choices=[('P', 'present'), ('N', 'notpresent')], max_length=1, null=True)),
                ('ur_bacteria', models.CharField(choices=[('P', 'present'), ('N', 'notpresent')], max_length=1, null=True)),
                ('blood_glucose_random', models.FloatField(null=True)),
                ('blood_urea', models.FloatField(null=True)),
                ('sodium', models.FloatField(null=True)),
                ('potassium', models.FloatField(null=True)),
                ('hemoglobin', models.FloatField(null=True)),
                ('packed_cell_volume', models.PositiveSmallIntegerField(null=True)),
                ('white_blood_cell_count', models.PositiveSmallIntegerField(null=True)),
                ('red_blood_cell_count', models.FloatField(null=True)),
                ('hypertension', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], max_length=1, null=True)),
                ('diabetes', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], max_length=1, null=True)),
                ('coronary_artery_disease', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], max_length=1, null=True)),
                ('appetite', models.CharField(choices=[('G', 'good'), ('B', 'poor')], max_length=1, null=True)),
                ('pedal_edema', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], max_length=1, null=True)),
                ('anemia', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], max_length=1, null=True)),
                ('classification', models.CharField(choices=[('C', 'ckd'), ('N', 'notckd')], max_length=1, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.patient')),
            ],
        ),
        migrations.CreateModel(
            name='CreatinineHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('inpatient', models.BooleanField()),
                ('creatinine', models.FloatField()),
                ('aki', models.PositiveSmallIntegerField(choices=[(0, 'Stage 0'), (1, 'Stage 1'), (2, 'Stage 2'), (3, 'Stage 3')])),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', address.models.AddressField(on_delete=django.db.models.deletion.CASCADE, to='address.address')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.patient')),
            ],
        ),
    ]
